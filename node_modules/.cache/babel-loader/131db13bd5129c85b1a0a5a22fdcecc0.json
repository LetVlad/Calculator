{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/calc-web/src/Calc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport History from \"./History\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calc = () => {\n  _s();\n\n  const [value1, setValue1] = useState('');\n  const [value2, setValue2] = useState('');\n  const [operator, setOperator] = useState('');\n  const [result, setResult] = useState('');\n\n  const InitValue1 = e => {\n    setValue1(e.target.value);\n  };\n\n  const InitValue2 = e => {\n    setValue2(e.target.value);\n  };\n\n  const Operator = e => {\n    e.preventDefault();\n    setOperator(e.target.value);\n  };\n\n  const addTestToPage = textToAdd => {\n    var para = document.createElement(\"p\");\n    var node = document.createTextNode(textToAdd);\n    para.appendChild(node);\n    var element = document.getElementsByTagName(\"body\")[0];\n    element.appendChild(para);\n  };\n\n  const Calculate = e => {\n    e.preventDefault();\n    const requestOptions = {\n      mode: 'no-cors',\n      method: 'GET',\n      redirect: 'follow',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(`http://localhost:5555/${operator}/?x=${value1}&y=${value2}`, requestOptions).then(response => response.text()).then(result => console.log('result')).then(responseData => {\n      // responseData = undefined\n      addTestToPage(responseData.title);\n      return responseData;\n    }).catch(error => console.log('error', error));\n    setValue1('');\n    setValue2('');\n    addTestToPage();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: InitValue1,\n        value: value1,\n        type: \"number\",\n        placeholder: \"input you first value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: operator,\n        onChange: Operator,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"addition\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"deduction\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"multiplication\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"division\",\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value2,\n        onChange: InitValue2,\n        type: \"number\",\n        placeholder: \"input yur second value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Calculate,\n        children: \" = \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calc, \"PgdTmnc/dhJRxPAoG8rQe4mj3eI=\");\n\n_c = Calc;\nexport default Calc;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calc\");","map":{"version":3,"sources":["/Users/vlad/Desktop/calc-web/src/Calc.js"],"names":["React","useState","History","Calc","value1","setValue1","value2","setValue2","operator","setOperator","result","setResult","InitValue1","e","target","value","InitValue2","Operator","preventDefault","addTestToPage","textToAdd","para","document","createElement","node","createTextNode","appendChild","element","getElementsByTagName","Calculate","requestOptions","mode","method","redirect","headers","fetch","then","response","text","console","log","responseData","title","catch","error"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport History from \"./History\";\n\n\nconst Calc = () => {\n    const [value1, setValue1] = useState('')\n    const [value2, setValue2] = useState('')\n    const [operator, setOperator] = useState('')\n    const [result,   setResult] = useState('')\n\n\n    const InitValue1 = (e) => {\n        setValue1(e.target.value)\n    }\n    const InitValue2 = (e) => {\n        setValue2(e.target.value)\n    }\n    const Operator = (e) => {\n        e.preventDefault()\n        setOperator(e.target.value)\n    }\n    const addTestToPage = (textToAdd) =>\n    {\n        var para = document.createElement(\"p\");\n        var node = document.createTextNode(textToAdd);\n        para.appendChild(node);\n\n        var element = document.getElementsByTagName(\"body\")[0];\n        element.appendChild(para);\n    }\n    const Calculate = (e) => {\n        e.preventDefault()\n        const requestOptions = {\n            mode: 'no-cors',\n            method: 'GET',\n            redirect: 'follow',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        };\n         fetch(`http://localhost:5555/${operator}/?x=${value1}&y=${value2}`, requestOptions)\n             .then(response => response.text())\n             .then(result => console.log('result'))\n             .then((responseData) => { // responseData = undefined\n                 addTestToPage(responseData.title);\n                 return responseData;\n             })\n             .catch(error => console.log('error', error));\n        setValue1('')\n        setValue2('')\n        addTestToPage()\n    }\n\n    return (\n        <div>\n            <form id='data'>\n                <input onChange={InitValue1}  value={value1} type=\"number\" placeholder='input you first value'/>\n                <select value={operator} onChange={Operator}>\n                    <option value=\"addition\">+</option>\n                    <option value=\"deduction\">-</option>\n                    <option value=\"multiplication\">*</option>\n                    <option value=\"division\">/</option>\n                </select>\n                <input value={value2} onChange={InitValue2} type=\"number\" placeholder='input yur second value'/>\n                <button onClick={Calculate}> = </button>\n                <span>{result}</span>\n              <History/>\n            </form>\n\n        </div>\n    )\n}\nexport default Calc\n"]},"metadata":{},"sourceType":"module"}